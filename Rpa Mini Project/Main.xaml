<Activity mc:Ignorable="sap sap2010" x:Class="Main" VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="1924,3134" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:p="http://schemas.uipath.com/workflow/activities/word" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>UiPath.Presentations.Activities</x:String>
      <x:String>UiPath.Presentations</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.Activities.Contracts</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Mail.SMTP.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Word.Activities</x:String>
      <x:String>UiPath.Word</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>UiPath.Presentations.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>UiPath.Presentations.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Presentations</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>UiPath.Activities.Contracts</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Word.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>UiPath.Word.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Main Sequence" sap:VirtualizedContainerService.HintSize="1934,3069" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="folder_path" />
      <Variable x:TypeArguments="x:String" Name="file_path" />
      <Variable x:TypeArguments="x:String" Name="word_folder_path" />
      <Variable x:TypeArguments="x:String" Name="word_file_path" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Parallel sap:VirtualizedContainerService.HintSize="1872,2958" sap2010:WorkflowViewState.IdRef="Parallel_1">
      <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="722,2911" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" ResizeWindow="None" WorkbookPath="student_list.xlsx">
        <ueab:ExcelApplicationCard.Body>
          <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="688,2347" sap2010:WorkflowViewState.IdRef="Sequence_2">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ueab:ExcelForEachRowX DisplayName="For Each Excel Row" EmptyRowBehavior="Stop" HasHeaders="True" sap:VirtualizedContainerService.HintSize="626,2236" sap2010:WorkflowViewState.IdRef="ExcelForEachRowX_1" Range="[Excel.Sheet(&quot;Sheet1&quot;)]" SaveAfterEachRow="False">
                <ueab:ExcelForEachRowX.Body>
                  <ActivityAction x:TypeArguments="ue:CurrentRowQuickHandle, x:Int32">
                    <ActivityAction.Argument1>
                      <DelegateInArgument x:TypeArguments="ue:CurrentRowQuickHandle" Name="CurrentRow" />
                    </ActivityAction.Argument1>
                    <ActivityAction.Argument2>
                      <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                    </ActivityAction.Argument2>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="592,2046" sap2010:WorkflowViewState.IdRef="Sequence_3">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:String" Name="pwd" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:PowerPointApplicationScope Password="{x:Null}" SensitivityLabel="{x:Null}" AutoSave="False" DisplayName="Use PowerPoint Presentation" sap:VirtualizedContainerService.HintSize="530,1440" sap2010:WorkflowViewState.IdRef="PowerPointApplicationScope_1" PresentationPath="IV CERTIFICATE.pptx" SensitivityOperation="None">
                        <ui:PowerPointApplicationScope.Body>
                          <ActivityAction x:TypeArguments="ui:IPresentationQuickHandle">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="ui:IPresentationQuickHandle" Name="PowerPoint" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="496,1191" sap2010:WorkflowViewState.IdRef="Sequence_4">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="x:String" Name="datereplace" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:FindAndReplaceTextInPresentation NumberOfReplacements="{x:Null}" DisplayName="Replace Text in Presentation" sap:VirtualizedContainerService.HintSize="434,207" sap2010:WorkflowViewState.IdRef="FindAndReplaceTextInPresentation_3" MatchCase="False" Presentation="[PowerPoint]" ReplaceAll="True" ReplaceWith="[CurrentRow.ByField(&quot;student name&quot;)]" SearchFor="XYZ" WholeWordsOnly="False" />
                              <ui:FindAndReplaceTextInPresentation NumberOfReplacements="{x:Null}" DisplayName="Replace Text in Presentation" sap:VirtualizedContainerService.HintSize="434,207" sap2010:WorkflowViewState.IdRef="FindAndReplaceTextInPresentation_2" MatchCase="False" Presentation="[PowerPoint]" ReplaceAll="True" ReplaceWith="[CurrentRow.ByField(&quot;email&quot;)]" SearchFor="fill" WholeWordsOnly="False" />
                              <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_1">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[datereplace]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[Now.ToString("MM/yy/dd")]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:FindAndReplaceTextInPresentation NumberOfReplacements="{x:Null}" DisplayName="Replace Text in Presentation" sap:VirtualizedContainerService.HintSize="434,207" sap2010:WorkflowViewState.IdRef="FindAndReplaceTextInPresentation_1" MatchCase="False" Presentation="[PowerPoint]" ReplaceAll="True" ReplaceWith="[datereplace]" SearchFor="Mm/yy/dd" WholeWordsOnly="False" />
                              <ui:SavePresentationFileAs DisplayName="Save PowerPoint File As" FilePath="[&quot;C:\Users\hariv\OneDrive\Documents\UiPath\Symposium Certificate Generation\certificates\&quot; + CurrentRow.ByField(&quot;student name&quot;).ToString + &quot;.ppt&quot;]" sap:VirtualizedContainerService.HintSize="434,217" sap2010:WorkflowViewState.IdRef="SavePresentationFileAs_2" Presentation="[PowerPoint]" ReplaceExisting="False" />
                            </Sequence>
                          </ActivityAction>
                        </ui:PowerPointApplicationScope.Body>
                      </ui:PowerPointApplicationScope>
                      <Assign sap:VirtualizedContainerService.HintSize="530,82" sap2010:WorkflowViewState.IdRef="Assign_2">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[folder_path]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">C:\Users\hariv\OneDrive\Documents\UiPath\Symposium Certificate Generation\certificates\</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="530,82" sap2010:WorkflowViewState.IdRef="Assign_3">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[file_path]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[folder_path + CurrentRow.ByField("student name").ToString + ".ppt"]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:GetPassword DisplayName="Get Password" sap:VirtualizedContainerService.HintSize="530,25" sap2010:WorkflowViewState.IdRef="GetPassword_8" ProtectedPassword="AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAdLVY9z9ozEWPN/xs622sfgAAAAACAAAAAAAQZgAAAAEAACAAAABtN9I7GnrBRvITStyAowKd6cLJNRgT1Ybrqk0Vdbh0wAAAAAAOgAAAAAIAACAAAAB0IFi9nGa7dEkzSBN2igFlZnf5K0C6NKprUNiP6JO8EyAAAABmgs65WkB206tj1E2UIzVd3YsrNqtdRhoHsV4/Fx+MLUAAAACI6l6nzc/q+/pCjXX8TnqaVLpwG60oO5J4gXRaFuTErNtufONoWcOoDzLMT2JtbDtQ/6NPqvE7cNNRxjp36dah" Result="[pwd]" />
                      <ui:SendMail Bcc="{x:Null}" Cc="{x:Null}" ContinueOnError="{x:Null}" From="{x:Null}" MailMessage="{x:Null}" Name="{x:Null}" ReplyTo="{x:Null}" Result="{x:Null}" SecurePassword="{x:Null}" TimeoutMS="{x:Null}" UseOAuth="{x:Null}" Body="[&quot;Hello &quot; + CurrentRow.ByField(&quot;student name&quot;) +&#xD;&#xA; &quot;Please find attached your certificate for the event.&quot;]" DisplayName="Send SMTP Mail Message" Email="harivarsanhsb@gmail.com" EnableSSL="True" sap:VirtualizedContainerService.HintSize="530,146" sap2010:WorkflowViewState.IdRef="SendMail_3" IgnoreCRL="False" IsBodyHtml="False" Password="[pwd]" Port="587" SecureConnection="Auto" Server="smtp.gmail.com" Subject="[&quot;hey&quot;+CurrentRow.ByField(&quot;student name&quot;)]" To="[CurrentRow.ByField(&quot;email&quot;)]">
                        <ui:SendMail.Files>
                          <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                            <InArgument x:TypeArguments="x:String">[file_path]</InArgument>
                          </scg:List>
                        </ui:SendMail.Files>
                      </ui:SendMail>
                    </Sequence>
                  </ActivityAction>
                </ueab:ExcelForEachRowX.Body>
              </ueab:ExcelForEachRowX>
            </Sequence>
          </ActivityAction>
        </ueab:ExcelApplicationCard.Body>
      </ueab:ExcelApplicationCard>
      <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="976,2911" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_2" ResizeWindow="None" WorkbookPath="student_list.xlsx">
        <ueab:ExcelApplicationCard.Body>
          <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
            </ActivityAction.Argument>
            <Sequence sap:VirtualizedContainerService.HintSize="942,2642" sap2010:WorkflowViewState.IdRef="Sequence_9">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ueab:ExcelForEachRowX DisplayName="For Each Excel Row" EmptyRowBehavior="Stop" HasHeaders="True" sap:VirtualizedContainerService.HintSize="880,2531" sap2010:WorkflowViewState.IdRef="ExcelForEachRowX_2" Range="[Excel.Sheet(&quot;Sheet1&quot;)]" SaveAfterEachRow="False">
                <ueab:ExcelForEachRowX.Body>
                  <ActivityAction x:TypeArguments="ue:CurrentRowQuickHandle, x:Int32">
                    <ActivityAction.Argument1>
                      <DelegateInArgument x:TypeArguments="ue:CurrentRowQuickHandle" Name="CurrentRow" />
                    </ActivityAction.Argument1>
                    <ActivityAction.Argument2>
                      <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                    </ActivityAction.Argument2>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="846,2341" sap2010:WorkflowViewState.IdRef="Sequence_8">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <p:WordApplicationScope SensitivityLabel="{x:Null}" DisplayName="Word Application Scope" FilePath="IdForm.docx" sap:VirtualizedContainerService.HintSize="784,2230" sap2010:WorkflowViewState.IdRef="WordApplicationScope_2" SensitivityOperation="None">
                        <p:WordApplicationScope.Body>
                          <ActivityAction x:TypeArguments="ui:WordDocument">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="ui:WordDocument" Name="WordDocumentScope" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="750,2120" sap2010:WorkflowViewState.IdRef="Sequence_7">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="x:String" Name="pass" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="688,2009" sap2010:WorkflowViewState.IdRef="Sequence_10">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <p:WordAddImage Bookmark="{x:Null}" OccurrenceIndex="{x:Null}" Text="{x:Null}" DisplayName="Add Picture" sap:VirtualizedContainerService.HintSize="626,189" sap2010:WorkflowViewState.IdRef="WordAddImage_1" ImagePath="Images\images.jpg" InsertRelativeTo="Document" Position="End" />
                                <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" sap:VirtualizedContainerService.HintSize="626,164" sap2010:WorkflowViewState.IdRef="WordReplaceText_1" Replace="[CurrentRow.ByField(&quot;student name&quot;)]" ReplaceAll="True" Search="Harivarsan" />
                                <p:WordReplacePicture DisplayName="Replace Picture" sap:VirtualizedContainerService.HintSize="626,138" sap2010:WorkflowViewState.IdRef="WordReplacePicture_3" PictureAltText="PHOTO" PicturePath="Images\images.jpg" />
                                <p:WordExportToPdf DisplayName="Save Document as PDF" FilePath="[&quot;C:\Users\hariv\OneDrive\Documents\UiPath\Symposium Certificate Generation\FINALIDCARDS\&quot; + CurrentRow.ByField(&quot;student name&quot;).ToString + &quot;.pdf&quot;]" sap:VirtualizedContainerService.HintSize="626,111" sap2010:WorkflowViewState.IdRef="WordExportToPdf_1" />
                                <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="626,1136" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_3" ResizeWindow="None" WorkbookPath="student_list.xlsx">
                                  <ueab:ExcelApplicationCard.Body>
                                    <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                                      </ActivityAction.Argument>
                                      <Sequence sap:VirtualizedContainerService.HintSize="592,867" sap2010:WorkflowViewState.IdRef="Sequence_13">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ueab:ExcelForEachRowX DisplayName="For Each Excel Row" EmptyRowBehavior="Stop" HasHeaders="True" sap:VirtualizedContainerService.HintSize="530,756" sap2010:WorkflowViewState.IdRef="ExcelForEachRowX_3" Range="[Excel.Sheet(&quot;Sheet1&quot;)]" SaveAfterEachRow="False">
                                          <ueab:ExcelForEachRowX.Body>
                                            <ActivityAction x:TypeArguments="ue:CurrentRowQuickHandle, x:Int32">
                                              <ActivityAction.Argument1>
                                                <DelegateInArgument x:TypeArguments="ue:CurrentRowQuickHandle" Name="CurrentRow" />
                                              </ActivityAction.Argument1>
                                              <ActivityAction.Argument2>
                                                <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                                              </ActivityAction.Argument2>
                                              <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="496,566" sap2010:WorkflowViewState.IdRef="Sequence_12">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_8">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[word_folder_path]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">C:\Users\hariv\OneDrive\Documents\UiPath\Symposium Certificate Generation\FINALIDCARDS\</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_9">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[word_file_path]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">[word_folder_path+CurrentRow.ByField("File Path")+ ".pdf"]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <ui:GetPassword DisplayName="Get Password" sap:VirtualizedContainerService.HintSize="434,25" sap2010:WorkflowViewState.IdRef="GetPassword_9" ProtectedPassword="AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAdLVY9z9ozEWPN/xs622sfgAAAAACAAAAAAAQZgAAAAEAACAAAACtwDidLfg4anBUjGb06BrzSv/y7+pUrvEMuVvnx7o4JAAAAAAOgAAAAAIAACAAAAA0+l/MLun1yrcUNYmQtfUr8q9zusbeZcg9pN12HpxhEiAAAADImZo+Hbd+y/PUM4CuzzwZbnmaK87/3e2T/wuO9zt0f0AAAAA2j3tLjBRF1I9hH/E8qhDJpblco59gzgdESdXnmswTutsvnb3+eTkPre0klMM+lYMICqDm8K+8K/abDWMwQO4t" Result="[pass]" />
                                                <ui:SendMail Bcc="{x:Null}" Cc="{x:Null}" ContinueOnError="{x:Null}" From="{x:Null}" MailMessage="{x:Null}" Name="{x:Null}" ReplyTo="{x:Null}" Result="{x:Null}" SecurePassword="{x:Null}" TimeoutMS="{x:Null}" UseOAuth="{x:Null}" Body="[&quot;Hello &quot; + CurrentRow.ByField(&quot;student name&quot;) +&#xD;&#xA; &quot;Please find attached your visitor pass for the event.&quot;]" DisplayName="Send SMTP Mail Message" Email="espinshalo@gmail.com" EnableSSL="True" sap:VirtualizedContainerService.HintSize="434,146" sap2010:WorkflowViewState.IdRef="SendMail_4" IgnoreCRL="False" IsBodyHtml="False" Password="[pass]" Port="587" SecureConnection="Auto" Server="smtp.gmail.com" Subject="Hey Download Your Gate Passes" To="[CurrentRow.ByField(&quot;email&quot;)]">
                                                  <ui:SendMail.Files>
                                                    <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                                                      <InArgument x:TypeArguments="x:String">
                                                        <VisualBasicValue x:TypeArguments="x:String" ExpressionText="word_file_path" />
                                                      </InArgument>
                                                    </scg:List>
                                                  </ui:SendMail.Files>
                                                </ui:SendMail>
                                              </Sequence>
                                            </ActivityAction>
                                          </ueab:ExcelForEachRowX.Body>
                                        </ueab:ExcelForEachRowX>
                                      </Sequence>
                                    </ActivityAction>
                                  </ueab:ExcelApplicationCard.Body>
                                </ueab:ExcelApplicationCard>
                              </Sequence>
                            </Sequence>
                          </ActivityAction>
                        </p:WordApplicationScope.Body>
                      </p:WordApplicationScope>
                    </Sequence>
                  </ActivityAction>
                </ueab:ExcelForEachRowX.Body>
              </ueab:ExcelForEachRowX>
            </Sequence>
          </ActivityAction>
        </ueab:ExcelApplicationCard.Body>
      </ueab:ExcelApplicationCard>
    </Parallel>
  </Sequence>
</Activity>